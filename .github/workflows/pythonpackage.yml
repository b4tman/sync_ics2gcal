name: Python package

on:
  push:
    branches:
    - master
    - develop
  pull_request:
    branches:
    - master
    - develop

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Upgrade pip
      run: python -m pip install --upgrade pip
    - name: Install Poetry
      uses: snok/install-poetry@v1
    - name: Install deps
      run: poetry install --with dev
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 sync_ics2gcal --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 sync_ics2gcal --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: poetry run pytest -v

    - name: Check type annotations with mypy
      run: |
        mkdir mypy_report
        poetry run mypy --pretty --html-report mypy_report/ .

    - name: Check type annotations with mypy strict mode (not failing)
      run: |
        poetry run mypy --strict --pretty . || true

    - name: Check formatting with black
      run: poetry run black --check --diff --color .

    - name: Upload mypy report
      uses: actions/upload-artifact@v2
      with:
        name: mypy_report
        path: mypy_report/
